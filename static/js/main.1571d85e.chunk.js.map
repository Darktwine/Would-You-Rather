{"version":3,"sources":["Card/Card.js","CardPicker.js","App.js","reportWebVitals.js","index.js"],"names":["Card","title","imgURL","ability","quote","taylorswft","kanyewst","className","src","alt","MainPage","props","randomPokemonID","Math","floor","random","fetchLeftPokeData","a","pokeID","axios","get","response","data","responseData","name","pokemonName","sprites","front_default","pokemonSprite","capitalizedPokemonName","charAt","toUpperCase","slice","setState","leftPokeName","leftPokeSprite","console","log","fetchRightPokeData","rightPokeName","rightPokeSprite","randomSpellIndex","fetchLeftAbility","results","randomSpellName","leftSpecialAbility","fetchRightAbility","rightSpecialAbility","changePoints","newPoints","state","points","chosenPokemon","mostPoints","winningPokemon","fetchLeftAnimeQuote","randomQuote","leftAnimeQuote","fetchRightAnimeQuote","rightAnimeQuote","handleChangeLeftCard","fetchLeftTaylorswft","fetchLeftKanyewst","handleChangeRightCard","fetchRightTaylorswft","fetchRightKanyewst","randomQuoteswft","leftKanyewst","rightKanyewst","leftTaylorswft","rightTaylorswft","this","handleChangeCard","type","onClick","Component","App","CardPicker","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1571d85e.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nfunction Card({title,imgURL, ability, quote, taylorswft, kanyewst, }){\n    return(\n        <div className='card-container'>\n            <div className='image-container'>\n                <img src={imgURL} alt=''/>\n            </div>\n            <div className='card-content'>\n                <div className='card-title'>\n                    <h1>{title}</h1>\n                </div>\n                <div className='card-body'>\n                    <p>Special Ability: {ability}</p>\n                    <p>Favorite Anime Quote: \"{quote}\"</p>\n                    <p>Favorite Taylor Swift Lyric: {taylorswft}</p>\n                    <p>Favorite Kanye West Lyric: {kanyewst}</p>\n                </div>\n                {/* <div className='btn'>\n                    <button type=\"button\" onClick={handleChangeCard}>\n                        This One!\n                    </button>\n                </div> */}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Card;\n\n// class Card extends React.Component{\n//     render(){\n//         return(\n//             <div>\n//                 <h1>Hello</h1>\n//                 <Container>\n//                     <Card style={{ width: '18rem' }}>\n//                         {/* <Card.Img variant=\"top\" src=\"holder.js/100px180?text=Image cap\" /> */}\n//                         <Card.Body>\n//                             <Card.Title>Card Title</Card.Title>\n//                             <Card.Text>\n//                             Some quick example text to build on the card title and make up the bulk of\n//                             the card's content.\n//                             </Card.Text>\n//                         </Card.Body>\n//                         {/* <ListGroup className=\"list-group-flush\">\n//                             <ListGroupItem>Cras justo odio</ListGroupItem>\n//                             <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\n//                             <ListGroupItem>Vestibulum at eros</ListGroupItem>\n//                         </ListGroup> */}\n//                         <Card.Body>\n//                             <Card.Link href=\"#\">Card Link</Card.Link>\n//                             <Card.Link href=\"#\">Another Link</Card.Link>\n//                         </Card.Body>\n//                     </Card>\n//                 </Container>\n//             </div>\n//         )\n//     }\n// }\n\n// export default Card;","import { Component } from \"react\";\nimport './App.css';\nimport Card from './Card/Card';\nimport axios from 'axios';\n\nclass MainPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // state for Left Card\n            leftPokeName: \"Pikachu\",\n            leftPokeSprite: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png\",\n            leftSpecialAbility: \"heal\",\n            leftAnimeQuote: \"I will never forget his name.\",\n            leftTaylorswft: \"Why'd I have to break what I love so much?\",\n            leftKanyewst: \"I'm going to personally see to it that Taylor Swift gets her masters back. Scooter is a close family friend\",\n\n            // state for Right Card\n            rightPokeName: \"Charmander\",\n            rightPokeSprite: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/4.png\",\n            rightSpecialAbility: \"fireball\",\n            rightAnimeQuote: \"Step on him like he is an ant!\",\n            rightTaylorswft: \"Life isn't how to survive the storm, it's about how to dance in the rain.\",\n            rightKanyewst: \"Sometimes you have to get rid of everything\",\n            points: 0,\n            mostPoints: 0,\n            chosenPokemon: \"none\",\n            winningPokemon: \"none\",\n        };\n    }\n\n    randomPokemonID = () => {\n        return (Math.floor(Math.random() * 898) + 1);\n    }\n\n    fetchLeftPokeData = async () => {\n        let pokeID = this.randomPokemonID();\n        try {\n            let response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokeID}`);\n            let responseData = await response.data;\n            // console.log(responseData);\n            let pokemonName = await responseData.name;\n            let pokemonSprite = await responseData.sprites.front_default;\n            // console.log(pokemonName);\n            // console.log(pokemonSprite);\n            let capitalizedPokemonName = pokemonName.charAt(0).toUpperCase() + pokemonName.slice(1);\n            // console.log(capitalizedPokemonName);\n\n            this.setState({\n                leftPokeName: capitalizedPokemonName,\n                leftPokeSprite: pokemonSprite,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    fetchRightPokeData = async () => {\n        let pokeID = this.randomPokemonID();\n        try {\n            let response = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokeID}`);\n            let responseData = await response.data;\n            // console.log(responseData);\n            let pokemonName = await responseData.name;\n            let pokemonSprite = await responseData.sprites.front_default;\n            // console.log(pokemonName);\n            // console.log(pokemonSprite);\n            let capitalizedPokemonName = pokemonName.charAt(0).toUpperCase() + pokemonName.slice(1);\n            // console.log(capitalizedPokemonName);\n\n            this.setState({\n                rightPokeName: capitalizedPokemonName,\n                rightPokeSprite: pokemonSprite,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    randomSpellIndex = () => {\n        return Math.floor(Math.random() * 318);\n    }\n\n    fetchLeftAbility = async () => {\n        let randomSpellIndex = this.randomSpellIndex();\n        console.log(randomSpellIndex);\n        try {\n            let response = await axios.get(`https://www.dnd5eapi.co/api/spells`);\n            // console.log(response);\n            let responseData = await response.data.results[randomSpellIndex];\n            // console.log(responseData);\n            let randomSpellName = await responseData.name;\n            // console.log(randomSpellName);\n\n            this.setState({\n                leftSpecialAbility: randomSpellName,\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    fetchRightAbility = async () => {\n        let randomSpellIndex = this.randomSpellIndex();\n        try {\n            let response = await axios.get(`https://www.dnd5eapi.co/api/spells`);\n            // console.log(response);\n            let responseData = await response.data.results[randomSpellIndex];\n            // console.log(responseData);\n            let randomSpellName = await responseData.name;\n            // console.log(randomSpellName);\n\n            this.setState({\n                rightSpecialAbility: randomSpellName,\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    changePoints = (name) => {\n        let newPoints = this.state.points + 1;\n        //changes if different card is picked\n        if (this.state.chosenPokemon !== name) {\n            newPoints = 1;\n        }\n        //handles changing winning pokemon\n        if (this.state.mostPoints < newPoints) {\n            this.setState({\n                mostPoints: newPoints,\n                winningPokemon: name,\n            })\n        }\n        this.setState({\n            points: newPoints,\n            chosenPokemon: name,\n        })\n    }\n\n    fetchLeftAnimeQuote = async () => {\n        try {\n            let response = await axios.get(`https://animechan.vercel.app/api/random`);\n            // let responseData = await response.data.results[qu]\n            let randomQuote = await response.data.quote;\n            console.log(response);\n            this.setState({\n                leftAnimeQuote: randomQuote,\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    fetchRightAnimeQuote = async () => {\n        try {\n            let response = await axios.get(`https://animechan.vercel.app/api/random`);\n            // console.log(response);\n            let randomQuote = await response.data.quote;\n            this.setState({\n                rightAnimeQuote: randomQuote,\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    handleChangeLeftCard = () => {\n        this.changePoints(this.state.rightPokeName);\n        this.fetchLeftPokeData();\n        this.fetchLeftAbility();\n        this.fetchLeftAnimeQuote();\n        this.fetchLeftTaylorswft();\n        this.fetchLeftKanyewst();\n    }\n\n    handleChangeRightCard = () => {\n        this.changePoints(this.state.leftPokeName);\n        this.fetchRightPokeData();\n        this.fetchRightAbility();\n        this.fetchRightAnimeQuote();\n        this.fetchRightTaylorswft();\n        this.fetchRightKanyewst();  \n    }\n\n    fetchLeftKanyewst = async () => {\n        try {\n            let response = await axios.get(`https://api.kanye.rest/`);\n            let randomQuoteswft = await response.data.quote;\n            this.setState({\n                leftKanyewst: randomQuoteswft,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    fetchRightKanyewst = async () => {\n        try {\n            let response = await axios.get(`https://api.kanye.rest/`);\n            let randomQuoteswft = await response.data.quote;\n            this.setState({\n                rightKanyewst: randomQuoteswft,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    fetchLeftTaylorswft = async () => {\n        try {\n            let response = await axios.get(`https://api.taylor.rest/`);\n            let randomQuoteswft = await response.data.quote;\n            this.setState({\n                leftTaylorswft: randomQuoteswft,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    fetchRightTaylorswft = async () => {\n        try {\n            let response = await axios.get(`https://api.taylor.rest/`);\n            let randomQuoteswft = await response.data.quote;\n            this.setState({\n                rightTaylorswft: randomQuoteswft,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <h2>\n                    <u>\n                    ...Would You Rather...\n                    </u>\n                </h2>\n                <div className='pointcontainer'>\n                    <p className=\"point\">Points for {this.state.chosenPokemon}: {this.state.points} </p>\n                    <p className=\"point\">Winning pokemon: {this.state.winningPokemon} with {this.state.mostPoints} points</p>\n                </div>\n                <div className='row'>\n                    <div className=\"column\">\n                        <Card \n                            title={this.state.leftPokeName}\n                            imgURL={this.state.leftPokeSprite}\n                            ability={this.state.leftSpecialAbility}\n                            quote ={this.state.leftAnimeQuote}\n                            taylorswft = {this.state.leftTaylorswft} \n                            kanyewst = {this.state.leftKanyewst}\n                            handleChangeCard={this.handleChangeCard}\n\n                        />\n                        <button className=\"btn\" type=\"button\" onClick={this.handleChangeRightCard}>\n                            I want this one!\n                        </button>\n                    </div>\n\n                    <div className=\"column\">\n                        <Card \n                            title={this.state.rightPokeName}\n                            imgURL={this.state.rightPokeSprite}\n                            ability={this.state.rightSpecialAbility}\n                            quote ={this.state.rightAnimeQuote}\n                            taylorswft = {this.state.rightTaylorswft}\n                            kanyewst = {this.state.rightKanyewst}\n                            handleChangeCard={this.handleChangeCard}\n                        />\n                        <button className=\"btn\" type=\"button\" onClick={this.handleChangeLeftCard}>\n                            I want this one!\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MainPage;","import React from 'react';\nimport './App.css';\nimport CardPicker from './CardPicker.js';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <CardPicker />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}